<%@ page contentType="text/html;charset=UTF-8" %>
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <title>–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #121212;
            color: white;
            margin: 0;
            padding: 20px;
        }
        .nav {
            margin-bottom: 30px;
            padding: 15px;
            background: #1e1e1e;
            border-radius: 10px;
            display: inline-block;
        }
        .btn {
            display: inline-block;
            background-color: #61dafb;
            color: #121212;
            padding: 10px 20px;
            margin: 10px;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
            transition: 0.3s;
            cursor: pointer;
        }
        .btn:hover {
            background-color: #4a9ecf;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background: #1e1e1e;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
        }
        h1, h2 {
            color: #61dafb;
        }
        .product-form, .product-list {
            background: #2c2c2c;
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
            text-align: left;
        }
        .product-form label {
            display: block;
            margin-top: 10px;
            color: #61dafb;
        }
        .product-form input,
        .product-form textarea,
        .product-form select {
            width: 100%;
            padding: 8px;
            margin-top: 5px;
            border: 1px solid #61dafb;
            border-radius: 5px;
            background-color: #333;
            color: white;
        }
        .product-form button {
            margin-top: 15px;
            background-color: #61dafb;
            color: black;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        .product-form button:hover {
            background-color: #4a9ecf;
        }
        .product-item {
            background: #2c2c2c;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }
        .error-message {
            color: #ff5252;
            font-weight: bold;
        }
        .loading {
            color: #61dafb;
            font-style: italic;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>

<div class="nav">
    <a href="home" class="btn">üè† –î–æ–º–∞—à–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞</a>
    <a href="register" class="btn">‚úçÔ∏è –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</a>
    <a href="login" class="btn">üîë –í—Ö—ñ–¥</a>
    <a href="time" class="btn">‚è≥ –ß–∞—Å–æ–≤–∏–π —Å–µ—Ä–≤—ñ—Å</a>
    <a href="random?type=salt&length=10" class="btn">üé≤ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö</a>
    <a href="products" class="btn">üõí –ü—Ä–æ–¥—É–∫—Ç–∏</a>
</div>

<div class="container">
    <h1>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ!</h1>

    <!-- –ö–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç/—Å–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ -->
    <button id="showAddFormBtn" class="btn">‚ûï –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä</button>

    <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ (—Å–∫—Ä—ã—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) -->
    <div id="addProductFormContainer" class="product-form hidden">
        <h2>–§–æ—Ä–º–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É</h2>
        <!--
             –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ (POST) —ç–∫—à–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ /products
             –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∞ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (PUT),
             –º–æ–∂–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –º–µ–Ω—è—Ç—å action –∏ –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ JS
        -->
        <form id="addProductForm" action="http://localhost:8081/Java_Web_211_war/products"
              method="post" enctype="multipart/form-data">
            <label for="name">–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:</label>
            <input type="text" id="name" name="name" required>

            <label for="price">–¶—ñ–Ω–∞:</label>
            <input type="number" id="price" name="price" step="0.01" required>

            <label for="description">–û–ø–∏—Å —Ç–æ–≤–∞—Ä—É:</label>
            <textarea id="description" name="description"></textarea>

            <label for="code">–ö–æ–¥ —Ç–æ–≤–∞—Ä—É:</label>
            <input type="text" id="code" name="code" required>

            <label for="stock">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞ —Å–∫–ª–∞–¥—ñ:</label>
            <input type="number" id="stock" name="stock" required>

            <label for="categoryId">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</label>
            <select id="categoryId" name="categoryId" required>
                <option value="">üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...</option>
            </select>

            <label for="file1">–§–æ—Ç–æ —Ç–æ–≤–∞—Ä—É:</label>
            <input type="file" id="file1" name="file1" accept="image/*">

            <button type="submit">üì§ –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä</button>
        </form>
    </div>

    <h2>–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤</h2>
    <div id="productList" class="product-list loading">üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤...</div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä" - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        const showAddFormBtn = document.getElementById("showAddFormBtn");
        const addProductFormContainer = document.getElementById("addProductFormContainer");

        showAddFormBtn.addEventListener("click", () => {
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–ª–∞—Å—Å .hidden, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É
            addProductFormContainer.classList.toggle("hidden");
        });

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        loadCategories();
        loadProducts();
    });

    function loadCategories() {
        const categorySelect = document.getElementById("categoryId");
        categorySelect.innerHTML = '<option value="">üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...</option>';

        fetch("http://localhost:8081/Java_Web_211_war/categories")
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                return response.json();
            })
            .then(categories => {
                if (!categories.length) {
                    categorySelect.innerHTML = '<option value="">‚ùå –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</option>';
                    return;
                }
                categorySelect.innerHTML = '<option value="">-- –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é --</option>';
                categories.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category.categoryId;
                    option.textContent = category.categoryTitle;
                    categorySelect.appendChild(option);
                });
            })
            .catch(error => {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:", error);
                categorySelect.innerHTML = '<option value="">‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</option>';
            });
    }

    function loadProducts() {
        const productList = document.getElementById("productList");
        productList.innerHTML = 'üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤...';
        productList.classList.add("loading");

        fetch("http://localhost:8081/Java_Web_211_war/products")
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                return response.json();
            })
            .then(products => {
                productList.classList.remove("loading");
                productList.innerHTML = "";

                if (!products.length) {
                    productList.innerHTML = "<p>‚ö†Ô∏è –¢–æ–≤–∞—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>";
                    return;
                }

                products.forEach(product => {
                    const item = document.createElement("div");
                    item.classList.add("product-item");

                    const imageTag = product.imageId
                        ? `<img src="/Java_Web_211_war/storage/${product.imageId}" alt="${product.name}" style="max-width: 100px;">`
                        : '‚ùå –ë–µ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è';

                    // –ö–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –∏ "–£–¥–∞–ª–∏—Ç—å" (–∑–∞–≥–ª—É—à–∫–∏)
                    // –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ –ø—Ä–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –º–æ–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å PUT
                    // –ü—Ä–∏ "–£–¥–∞–ª–∏—Ç—å" - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å DELETE-–∑–∞–ø—Ä–æ—Å
                    const editBtn = `<button class="btn" onclick="editProduct('${product.productId}')">‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>`;
                    const deleteBtn = `<button class="btn" onclick="deleteProduct('${product.productId}')">üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏</button>`;


                    productList.appendChild(item);
                });
            })
            .catch(error => {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—ñ–≤:", error);
                productList.classList.remove("loading");
                productList.innerHTML = '<p class="error-message">‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤</p>';
            });
    }

    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    function editProduct(productId) {
        alert("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ c ID = " + productId);
        // –ù–∞–ø—Ä–∏–º–µ—Ä:
        // 1) –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ (–µ—Å–ª–∏ –Ω–µ –≤ –º–∞—Å—Å–∏–≤–µ) –∏–ª–∏ –Ω–∞–π—Ç–∏ –µ–≥–æ –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö products
        // 2) –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É, –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ PUT-–∑–∞–ø—Ä–æ—Å
        // 3) –ü—Ä–∏ —Å–∞–±–º–∏—Ç–µ —Ñ–æ—Ä–º—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å PUT ...
    }

    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    function deleteProduct(productId) {
        if (!confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ç–æ–≤–∞—Ä?")) return;

        // –ü—Ä–∏–º–µ—Ä DELETE-–∑–∞–ø—Ä–æ—Å–∞
        fetch(`http://localhost:8081/Java_Web_211_war/products?productId=${productId}`, {
            method: "DELETE",
            headers: {
                // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ: 'Authorization': 'Bearer ...'
            }
        })
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                return response.json();
            })
            .then(data => {
                console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ:", data);
                alert(data.message || "–¢–æ–≤–∞—Ä –≤–∏–¥–∞–ª–µ–Ω–æ");
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
                loadProducts();
            })
            .catch(error => {
                console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É:", error);
                alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É");
            });
    }
</script>

</body>
</html>